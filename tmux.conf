# improve colours
set -g default-terminal "screen-256color"
set-option -ga terminal-overrides ",*256col*:Tc"

# larger history scrollback
set -g history-limit 20000

# command prefix
set -g prefix C-a
bind-key a send-prefix
bind-key C-a last-window

# start window numbers at 1 to match keyboard order with tmux window order
set -g base-index 1
setw -g pane-base-index 1

# renumber windows sequentially after closing any of them
set -g renumber-windows on

# provide access to the clipboard for pbpaste, pbcopy
set-option -g default-command "reattach-to-user-namespace -l zsh"
setw -g automatic-rename on

bind-key -T copy-mode-vi 'v' send -X begin-selection
bind-key -T copy-mode-vi 'y' send -X copy-selection

# update default binding of 'Enter' to also use copy-pipe
unbind -T copy-mode Enter
bind-key -T copy-mode Enter send -X copy-selection

bind y run 'tmux save-buffer - | reattach-to-user-namespace pbcopy '
bind C-y run 'tmux save-buffer - | reattach-to-user-namespace pbcopy '

# mouse behavior
# is_mouse_mode_on='tmux show-option -g | grep -i "mouse\son"'
# bind m if-shell "$is_mouse_mode_on" "display 'mouse tmux: off'; setw -g mouse off" "display \"mouse tmux: on\"; setw -g mouse on"
# bind-key -T root WheelUpPane if-shell -F -t = "#{alternate_on}" "send-keys -M" "select-pane -t =; copy-mode -e; send-keys -M"
# bind-key -T root WheelDownPane if-shell -F -t = "#{alternate_on}" "send-keys -M" "select-pane -t =; send-keys -M"
# bind-key -t vi-copy WheelUpPane scroll-up
# bind-key -t vi-copy WheelDownPane scroll-down

set -g mouse on
bind -T copy-mode C-WheelUpPane send -X halfpage-up
bind -T copy-mode C-WheelDownPane send -X halfpage-down

# act like vim
setw -g mode-keys vi

bind-key v split-window -h -c "#{pane_current_path}"
bind-key s split-window -v -c "#{pane_current_path}"
bind-key -r J resize-pane -D 5
bind-key -r K resize-pane -U 5
bind-key -r H resize-pane -L 5
bind-key -r L resize-pane -R 5

# smart pane switching with awareness of vim splits
isVim="tmux display -p '#{pane_current_command} #T' | grep -iqE '(vim|VIM)'"
bind -n C-j if-shell "$isVim" "send C-j" "select-pane -D"
bind -n C-k if-shell "$isVim" "send C-k" "select-pane -U"
bind -n C-h if-shell "$isVim" "send C-h" "select-pane -L"
bind -n C-l if-shell "$isVim" "send C-l" "select-pane -R"
bind -n C-\ if-shell "$isVim" "send C-\\" "select-pane -l"

bind '"' split-window -c '#{pane_current_path}'
bind % split-window -h -c '#{pane_current_path}'
bind c new-window -c '#{pane_current_path}'

bind m next-window
bind n previous-window

set -g base-index 1
set -g pane-base-index 1

bind r source-file ~/.tmux.conf \; display 'Reloaded tmux config file.'

set -s escape-time 0

# Allow the arrow key to be used immediately after changing windows
set-option -g repeat-time 0

bg_colour='colour0'

set -g status-justify 'left'

set -g status-interval 60
set -g status-left-length 30

set -g status-fg default
set -g status-bg $bg_colour

set -g status-left '#[fg=default,bg=#3e4b59] ‚ùí #S #[fg=default,bg=default]'
set -g status-left-attr 'none'
set -g status-right ' #[bg=#1d242c,fg=default] %H:%M #[bg=#3e4b59] %a, %h %d %Y '
set -g status-right-attr 'none'

set -g window-status-fg white
set -g window-status-bg $bg_colour
set -g window-status-format ' #I #W#[fg=colour8] '
set -g window-status-attr 'none'
set -g window-status-separator ''

set -g window-status-current-fg 'colour15'
set -g window-status-current-bg $bg_colour
set -g window-status-current-format '#[fg=black,bg=#f29718] #I:#W #[fg=default]'
set -g window-status-current-attr 'none'

set -g pane-border-fg '#2d3640'
set -g pane-active-border-fg blue
set -g pane-active-border-bg blue

set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'tmux-plugins/tmux-continuum'
set -g @plugin 'tmux-plugins/tmux-copycat'
set -g @plugin 'nhdaly/tmux-scroll-copy-mode'

run '~/.tmux/plugins/tpm/tpm'
